name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: "Build and push Docker image"
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1: Checkout do código fonte
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Configuração do JDK para construir o projeto
      - name: Setup Java JDK
        uses: actions/setup-java@v4.3.0
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      # Step 3: Construir o projeto usando Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Step 4: Login no DockerHub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 5: Build e push da imagem Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/playground-gitops-argo-cd:${{ github.sha }}

  update-argocd-repo:
    name: "Deploy/Update Argo CD Repo"
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    steps:
      # Verifica o repositório atual
      - name: Checkout
        uses: actions/checkout@v4

      # Configura o git com o usuário e o email
      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Clona o repositório de destino
      - name: Clone destination repository
        run: |
          git clone -b beta https://github.com/jonilsonds9/playground-deploy-gitops.git
        env:
          REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      # Faz alterações no repositório clonado
      - name: Make changes
        run: |
          cd playground-deploy-gitops
          chart_dir="helm"
          new_image_tag=${{ github.sha }}
          sed -i "s/^  tag: .*/  tag: $new_image_tag/" "$chart_dir/values-beta-prod.yaml"

      # Faz o commit e push das alterações no repositório de destino
      - name: Commit and push changes
        run: |
          cd playground-deploy-gitops
          git commit -am "Atualização Docker image para sync no Argo CD"
          git push https://$REPO_ACCESS_TOKEN@github.com/jonilsonds9/playground-deploy-gitops.git beta-prod
        env:
          REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
